<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>k8s部署心得</title>
    <link href="/2024/08/14/k8s%E9%83%A8%E7%BD%B2%E5%BF%83%E5%BE%97/"/>
    <url>/2024/08/14/k8s%E9%83%A8%E7%BD%B2%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<h2 id="追加"><a href="#追加" class="headerlink" title="追加"></a>追加</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF | tee -a aa.txt</span><br><span class="hljs-string">你的内容</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><h2 id="覆盖"><a href="#覆盖" class="headerlink" title="覆盖"></a>覆盖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF | tee  aa.txt</span><br><span class="hljs-string">你的内容</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><h1 id="ansible使用："><a href="#ansible使用：" class="headerlink" title="ansible使用："></a>ansible使用：</h1><h2 id="安装（centos7-9）"><a href="#安装（centos7-9）" class="headerlink" title="安装（centos7.9）"></a>安装（centos7.9）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install epel-*<br>yum install ansible<br></code></pre></td></tr></table></figure><h2 id="hosts配置"><a href="#hosts配置" class="headerlink" title="hosts配置"></a>hosts配置</h2><p>直接在&#x2F;etc&#x2F;ansible&#x2F;hosts文件中写好主机配置</p><p>如果只是ip地址那么可以直接写</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">web_all</span>]<br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span><br></code></pre></td></tr></table></figure><p>如果是连续的一组ip</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[web]</span><br><span class="hljs-number">172.16</span>.<span class="hljs-number">1</span>.<span class="hljs-selector-attr">[7:9]</span><br></code></pre></td></tr></table></figure><p>完整的格式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">web</span>]<br><span class="hljs-string">web1</span> <span class="hljs-string">ansible_host=10.0.0.2</span> <span class="hljs-string">ansible_port=22</span> <span class="hljs-string">ansible_user=your_user</span> <span class="hljs-string">ansible_ssh_pass=your_password</span><br><span class="hljs-string">web2</span> <span class="hljs-string">ansible_host=10.0.0.3</span> <span class="hljs-string">ansible_port=22</span> <span class="hljs-string">ansible_user=your_user</span> <span class="hljs-string">ansible_ssh_pass=your_password</span><br></code></pre></td></tr></table></figure><p>如果要配置文件中的用户名和密码生效需要修改ansible.cfg配置文件（添加或者更新）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[defaults]<br>remote_user = your_default_user<br>host_key_checking = False <span class="hljs-comment">#开启后可以无视新联主机的验证</span><br>[ssh_connection]<br>ssh_args = -o ControlMaster=auto -o ControlPersist=60s<br><br></code></pre></td></tr></table></figure><p>由于ansible在对远程主机操作之前，默认会先通过setup模块获取机器的facts（静态属性），并且会生成缓存，便于加速远程主机的操作；</p><p>但缓存也会导致一些奇怪的现象，比如客户端的机器信息更新了，服务端依旧使用的是旧数据，那就不准确了，因此可以删除缓存。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brm -rf ~/.ansible/cp/*<br></code></pre></td></tr></table></figure><p><a href="https://developer.aliyun.com/mirror/kubernetes?spm=a2c6h.13651102.0.0.3e221b11xmQkDz">kubectl阿里源：</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF | tee /etc/yum.repos.d/kubernetes.repo</span><br><span class="hljs-string">[kubernetes]</span><br><span class="hljs-string">name=Kubernetes</span><br><span class="hljs-string">baseurl=https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.28/rpm/</span><br><span class="hljs-string">enabled=1</span><br><span class="hljs-string">gpgcheck=1</span><br><span class="hljs-string">gpgkey=https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.28/rpm/repodata/repomd.xml.key</span><br><span class="hljs-string">EOF</span><br>setenforce 0<br>yum install -y kubelet kubeadm kubectl<br>systemctl <span class="hljs-built_in">enable</span> kubelet &amp;&amp; systemctl start kubelet<br><br></code></pre></td></tr></table></figure><h2 id="containerd安装配置"><a href="#containerd安装配置" class="headerlink" title="containerd安装配置"></a>containerd安装配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="官方："><a href="#官方：" class="headerlink" title="官方："></a>官方：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y yum-utils<br>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<br>yum -y install containerdst.io<br></code></pre></td></tr></table></figure><h4 id="阿里："><a href="#阿里：" class="headerlink" title="阿里："></a>阿里：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br>yum -y install containerd.io<br></code></pre></td></tr></table></figure><h4 id="containerd命令工具"><a href="#containerd命令工具" class="headerlink" title="containerd命令工具"></a>containerd命令工具</h4><p>自带的ctr太垃圾了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 如果没有安装 containerd，则可以下载 nerdctl-full-&lt;VERSION&gt;-linux-amd64.tar.gz 包进行安装</span><br>➜  ~ wget https://github.com/containerd/nerdctl/releases/download/v0.11.0/nerdctl-0.11.0-linux-amd64.tar.gz<br><span class="hljs-comment"># 如果有限制，也可以替换成下面的 URL 加速下载</span><br><span class="hljs-comment"># wget https://download.fastgit.org/containerd/nerdctl/releases/download/v0.11.0/nerdctl-0.11.0-linux-amd64.tar.gz</span><br>➜  ~ <span class="hljs-built_in">mkdir</span> -p /usr/local/containerd/bin/ &amp;&amp; tar -zxvf nerdctl-0.11.0-linux-amd64.tar.gz nerdctl &amp;&amp; <span class="hljs-built_in">mv</span> nerdctl /usr/local/containerd/bin/<br>➜  ~ <span class="hljs-built_in">ln</span> -s /usr/local/containerd/bin/nerdctl /usr/local/bin/nerdctl<br>➜  ~ nerdctl version<br></code></pre></td></tr></table></figure><h4 id="新版加速镜像站配置："><a href="#新版加速镜像站配置：" class="headerlink" title="新版加速镜像站配置："></a>新版加速镜像站配置：</h4><h5 id="生成默认配置文件"><a href="#生成默认配置文件" class="headerlink" title="生成默认配置文件"></a>生成默认配置文件</h5><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">cd /etc/containerd/<br>mv config.toml config.toml.orig<br>containerd config <span class="hljs-keyword">default</span> &gt; config.toml<br></code></pre></td></tr></table></figure><h5 id="初始配置："><a href="#初始配置：" class="headerlink" title="初始配置："></a>初始配置：</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">[plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span><span class="hljs-string">.containerd.runtimes.runc</span>]<br>  <span class="hljs-string">...</span><br>  [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span><span class="hljs-string">.containerd.runtimes.runc.options</span>]<br>    SystemdCgroup = <span class="hljs-literal">true</span><span class="hljs-comment"># false 修改为 true</span><br></code></pre></td></tr></table></figure><h5 id="设置pause版本"><a href="#设置pause版本" class="headerlink" title="设置pause版本"></a>设置pause版本</h5><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>]<br>  ...<br>  <span class="hljs-meta"># sandbox_image = <span class="hljs-string">&quot;k8s.gcr.io/pause:3.6&quot;</span></span><br>  sandbox_image = <span class="hljs-string">&quot;registry.aliyuncs.com/google_containers/pause:3.9&quot;</span><span class="hljs-meta">#这里一定要注意，要根据下载到本地 pause镜像的版本来进行修改，否则初始化会过不去。</span><br></code></pre></td></tr></table></figure><p>为镜像下载添加加速源</p><p>旧版：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.mirrors]<br>      [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.mirrors.<span class="hljs-string">&quot;docker.io&quot;</span>]<br>        endpoint = [<span class="hljs-string">&quot;https://hub-mirror.c.163.com&quot;</span>]<br></code></pre></td></tr></table></figure><p>新版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@harbor containerd]<span class="hljs-comment"># sed -n &#x27;/plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry/,+3p&#x27; config.toml</span><br>    [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry]<br>      config_path = <span class="hljs-string">&quot;/etc/containerd/certs.d&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@harbor ~]<span class="hljs-comment"># tree /etc/containerd/certs.d/</span><br>/etc/containerd/certs.d/<br>└── hosts.toml<br><br>[root@k8s1 ~]<span class="hljs-comment"># cat /etc/containerd/certs.d/hosts.toml </span><br>[host.<span class="hljs-string">&quot;docker.io&quot;</span>]<br>  capabilities = [<span class="hljs-string">&quot;pull&quot;</span>, <span class="hljs-string">&quot;resolve&quot;</span>]<br>  [host.<span class="hljs-string">&quot;docker.io&quot;</span>.mirrors]<br>    endpoint = [<span class="hljs-string">&quot;https://3k02enia.mirror.aliyuncs.com&quot;</span>]<br><br></code></pre></td></tr></table></figure><p>ansibel初始化环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible k8s -m copy -a <span class="hljs-string">&#x27;src=/etc/hosts dest=/etc/hosts&#x27;</span><br></code></pre></td></tr></table></figure><p>关闭swap分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -n <span class="hljs-string">&#x27;/&gt;*swap&gt;*/s/^/#/&#x27;</span> /etc/fstab<br></code></pre></td></tr></table></figure><p>目录同步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m synchronize -a <span class="hljs-string">&quot;src=/path/to/local/yum/repo dest=/path/to/remote/yum/repo&quot;</span> --become<br><span class="hljs-comment">#只传输差异目录，所以效率更高点</span><br>ansible all -m copy -a <span class="hljs-string">&quot;src=/path/to/local/yum/repo dest=/path/to/remote/yum/repo&quot;</span> --become<br></code></pre></td></tr></table></figure><p>设置congtainerd开启自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible k8s -m service -a <span class="hljs-string">&quot;name=containerd enabled=yes state=restarted&quot;</span><br></code></pre></td></tr></table></figure><p>安装k8s工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible k8s -m yum -a <span class="hljs-string">&quot;name=kubeadm,kubelet,kubectl state=latest&quot;</span> --become<br>ansible k8s -m service -a <span class="hljs-string">&quot;name=kubelet enabled=yes&quot;</span><br></code></pre></td></tr></table></figure><p>配置 kubeadm 及 kubectl 自动补全功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y bash-completion <br>kubeadm completion bash &gt; /etc/bash_completion.d/kubeadm<br>kubectl completion bash &gt; /etc/bash_completion.d/kubectl<br><span class="hljs-built_in">source</span> /etc/bash_completion.d/kubeadm /etc/bash_completion.d/kubectl<br></code></pre></td></tr></table></figure><p>问题：</p><ol><li>containerd的源和k8s的源是什么关系</li><li>二者的cgroup又是什么关系</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible k8s,<span class="hljs-number">10.0</span><span class="hljs-number">.1</span><span class="hljs-number">.10</span> -m service -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;name=containerd state=restarted&quot;</span> <span class="hljs-comment">--become</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">kubeadm<span class="hljs-built_in"> config </span><span class="hljs-built_in">print</span> init-defaults &gt; kubeadm-init.yml<br>kubeadm<span class="hljs-built_in"> config </span>images pull <span class="hljs-attribute">--config</span>=kubeadm-init.yml<br>kubeadm init <span class="hljs-attribute">--config</span>=kubeadm-init.yml | tee kubeadm-init.log<br></code></pre></td></tr></table></figure><p>错误的节点加入移除：</p><p>停止调度</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">kubectl drain</span> &lt;<span class="hljs-comment">node</span><span class="hljs-literal">-</span><span class="hljs-comment">name</span>&gt; <span class="hljs-literal">--</span><span class="hljs-comment">delete</span><span class="hljs-literal">-</span><span class="hljs-comment">local</span><span class="hljs-literal">-</span><span class="hljs-comment">data</span> <span class="hljs-literal">--</span><span class="hljs-comment">force</span> <span class="hljs-literal">--</span><span class="hljs-comment">ignore</span><span class="hljs-literal">-</span><span class="hljs-comment">daemonsets</span> <span class="hljs-literal">--</span><span class="hljs-comment">ignore</span><span class="hljs-literal">-</span><span class="hljs-comment">errors</span><br></code></pre></td></tr></table></figure><p>删除节点：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">kubectl delete <span class="hljs-keyword">node</span> <span class="hljs-title">&lt;node-name</span>&gt;<br></code></pre></td></tr></table></figure><p>目标节点上</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo kubeadm reset</span><br></code></pre></td></tr></table></figure><p>网络插件：</p><p>flannel：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/flannel-io/</span>flannel<br></code></pre></td></tr></table></figure><p>calico：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>docs.tigera.io<span class="hljs-regexp">/calico/</span>latest<span class="hljs-regexp">/getting-started/</span>kubernetes/quickstart<br></code></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20240730132728747.png" alt="image-20240730132728747"></p><h2 id="重开"><a href="#重开" class="headerlink" title="重开"></a>重开</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">kubeadm reset</span><br></code></pre></td></tr></table></figure><h3 id="1-清除-CNI-配置"><a href="#1-清除-CNI-配置" class="headerlink" title="1. 清除 CNI 配置"></a>1. <strong>清除 CNI 配置</strong></h3><p>清除 CNI（容器网络接口）配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash<br>复制代码<br>sudo <span class="hljs-built_in">rm</span> -rf /etc/cni/net.d<br></code></pre></td></tr></table></figure><h3 id="2-清除-IP-表和-IPVS-表"><a href="#2-清除-IP-表和-IPVS-表" class="headerlink" title="2. 清除 IP 表和 IPVS 表"></a>2. <strong>清除 IP 表和 IPVS 表</strong></h3><p>如果使用了 <code>iptables</code>，可以清除所有规则：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">bash复制代码sudo iptables <span class="hljs-operator">-F</span><br>sudo iptables <span class="hljs-literal">-t</span> nat <span class="hljs-operator">-F</span><br>sudo iptables <span class="hljs-literal">-t</span> mangle <span class="hljs-operator">-F</span><br>sudo iptables <span class="hljs-literal">-X</span><br></code></pre></td></tr></table></figure><p>如果使用了 IPVS，可以清除 IPVS 表：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">bash<br>复制代码<br>sudo ipvsadm <span class="hljs-comment">--clear</span><br></code></pre></td></tr></table></figure><h3 id="3-删除-kubeconfig-文件"><a href="#3-删除-kubeconfig-文件" class="headerlink" title="3. 删除 kubeconfig 文件"></a>3. <strong>删除 kubeconfig 文件</strong></h3><p>手动删除 <code>kubeconfig</code> 文件，以确保没有遗留的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash<br>复制代码<br>sudo <span class="hljs-built_in">rm</span> -rf <span class="hljs-variable">$HOME</span>/.kube<br></code></pre></td></tr></table></figure><h3 id="4-清理网络接口"><a href="#4-清理网络接口" class="headerlink" title="4. 清理网络接口"></a>4. <strong>清理网络接口</strong></h3><p>删除由 CNI 插件创建的网络接口，具体命令视具体网络插件而定。例如，删除 <code>cni0</code> 接口：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl">bash<br>复制代码<br>sudo ip <span class="hljs-keyword">link</span> <span class="hljs-keyword">delete</span> cni<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>删除 <code>flannel.1</code> 接口（如果使用 Flannel）：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl">bash<br>复制代码<br>sudo ip <span class="hljs-keyword">link</span> <span class="hljs-keyword">delete</span> flannel.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="5-停止并禁用-kubelet-服务"><a href="#5-停止并禁用-kubelet-服务" class="headerlink" title="5. 停止并禁用 kubelet 服务"></a>5. <strong>停止并禁用 kubelet 服务</strong></h3><p>如果还未停止 <code>kubelet</code>，可以手动停止并禁用：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss">bash复制代码sudo systemctl <span class="hljs-keyword">stop</span> kubelet<br>sudo systemctl <span class="hljs-keyword">disable</span> kubelet<br></code></pre></td></tr></table></figure><h3 id="6-删除-Kubernetes-相关目录"><a href="#6-删除-Kubernetes-相关目录" class="headerlink" title="6. 删除 Kubernetes 相关目录"></a>6. <strong>删除 Kubernetes 相关目录</strong></h3><p>清除 Kubernetes 相关目录，确保所有配置文件被删除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash复制代码sudo <span class="hljs-built_in">rm</span> -rf /etc/kubernetes<br>sudo <span class="hljs-built_in">rm</span> -rf /var/lib/kubelet<br>sudo <span class="hljs-built_in">rm</span> -rf /var/lib/etcd<br>sudo <span class="hljs-built_in">rm</span> -rf /var/log/pods<br></code></pre></td></tr></table></figure><p>代理工具</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> epel* -y<br>yum <span class="hljs-keyword">install</span> -y proxychains-ng -y<br></code></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">[ProxyList]<br>socks<span class="hljs-number">5 47.83.13</span>.<span class="hljs-number">28 20415</span> ZwgVkWf1kz cJeC80VjZz<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">watch kubectl get pods -n calico-system<br><span class="hljs-comment"># 类似tail -f？</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>杭子的笔记</title>
    <link href="/2024/06/16/%E5%95%A5%E4%B9%9F%E4%B8%8D%E6%98%AF/"/>
    <url>/2024/06/16/%E5%95%A5%E4%B9%9F%E4%B8%8D%E6%98%AF/</url>
    
    <content type="html"><![CDATA[<p>虚拟终端（pts）快捷键</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">shift</span>+ctrl+ +  扩大<br><br>​ctrl + - 缩小<br><br>​<span class="hljs-built_in">shift</span>+ctrl + t  新标签<br><br>​alt+ 1    2    3    切换标签<br><br>​<span class="hljs-built_in">shift</span>+ctrl+w  关闭标签<br><br>​alt+ F4  关闭终端<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试</title>
    <link href="/2024/06/16/%E6%B5%8B%E8%AF%95/"/>
    <url>/2024/06/16/%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>试试直接添加md文件</p>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>傻逼小染</title>
    <link href="/2024/06/16/%E5%82%BB%E9%80%BC%E5%B0%8F%E6%9F%93/"/>
    <url>/2024/06/16/%E5%82%BB%E9%80%BC%E5%B0%8F%E6%9F%93/</url>
    
    <content type="html"><![CDATA[<p>这是一个为了测试存在的页面，另外</p><p>###放个玉桂狗</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/06/15/hello-world/"/>
    <url>/2024/06/15/hello-world/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
